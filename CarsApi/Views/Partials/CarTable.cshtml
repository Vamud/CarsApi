@model CarsApi.Models.IndexViewModel

@{
    Layout = "/Views/Shared/_Layout.cshtml";
    var pageModel = Model.PageViewModel;
}

<div class="container">
    <div class="container">
        <form method="get">
            <select class="form-select" name="brand" asp-items="Model.FilterViewModel.Brands" onchange="this.form.submit()"></select>

           @* <input type="submit" value="Filter" />*@
        </form>
    </div>
    <div class="container">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">Model</th>
                    <th scope="col">Launch date</th>
                    <th scope="col">Price</th>
                    <th scope="col">Details</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var car in Model.CarModels)
                {
                    <tr>
                        <td>@car.Name</td>
                        <td>@car.LaunchDate.ToShortDateString()</td>
                        <td>@(car.Price)$</td>
                        <td><a href="@car.Url" class="btn btn-primary">Show details</a></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="row justify-content-md-center">
        <div class="col-md-auto">
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    @Html.ActionLink("Test", "Index", "Cars", new { page = 2, brand= "BMW"});
                    @if (Model.PageViewModel.HasPreviousPage)
                    {
                        var queryString = $"?page={Model.PageViewModel.PageNumber - 1}&brand={Model.FilterViewModel.SelectedBrand}";

                        <li class="page-item">
                            <a class="page-link" href=@queryString aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                                <span class="sr-only">Previous</span>
                            </a>
                        </li>
                    }

                    @for (int page = 1; page <= pageModel.TotalPages; page++)
                    {
                        var queryString = $"?page={page}&brand={Model.FilterViewModel.SelectedBrand}";

                        <li class="page-item"><a class="page-link" href="@queryString">@(page)</a></li>
                    }

                    @if (Model.PageViewModel.HasNextPage)
                    {
                        var queryString = $"?page={Model.PageViewModel.PageNumber + 1}&brand={Model.FilterViewModel.SelectedBrand}";

                        <li class="page-item">
                            <a class="page-link" href=@queryString aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                                <span class="sr-only">Next</span>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
</div>
